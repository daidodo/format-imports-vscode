{
  "name": "tsimportsorter",
  "displayName": "JS/TS Import/Export Sorter",
  "description": "Auto format imports and exports for JavaScript and TypeScript.",
  "icon": "assets/icons/main.jpg",
  "main": "./out/extension.js",
  "publisher": "dozerg",
  "version": "7.4.5",
  "author": "Zhao DAI <daidodo@gmail.com>",
  "license": "MIT",
  "scripts": {
    "vscode:prepublish": "npm run clean && npm run compile",
    "webpack": "npm run clean && webpack --mode development",
    "webpack-prod": "npm run clean && webpack --mode production",
    "compile": "tsc",
    "watch": "tsc -watch",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "clean": "rm -rf out",
    "prepublishOnly": "cat publish/is/prevented"
  },
  "homepage": "https://github.com/daidodo/format-imports-vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/daidodo/format-imports-vscode"
  },
  "bugs": {
    "url": "https://github.com/daidodo/format-imports-vscode/issues"
  },
  "engines": {
    "vscode": "^1.63.1"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "javascript",
    "typescript",
    "import",
    "export",
    "sort imports",
    "format imports",
    "format exports",
    "multi-root ready"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onCommand:tsImportSorter.command.sortImports"
  ],
  "contributes": {
    "menus": {
      "commandPalette": [
        {
          "command": "tsImportSorter.command.sortImports",
          "when": "editorLangId==javascript || editorLangId==javascriptreact || editorLangId==typescript || editorLangId==typescriptreact"
        }
      ],
      "editor/context": [
        {
          "command": "tsImportSorter.command.sortImports",
          "group": "1_modification",
          "when": "resourceLangId==javascript || resourceLangId==javascriptreact || resourceLangId==typescript || resourceLangId==typescriptreact"
        }
      ]
    },
    "keybindings": [
      {
        "command": "tsImportSorter.command.sortImports",
        "key": "alt+shift+s",
        "when": "editorTextFocus"
      }
    ],
    "commands": [
      {
        "command": "tsImportSorter.command.sortImports",
        "title": "Sort Imports/Exports"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "import-sorter.json",
        "url": "./schemas/import-sorter.schema.json"
      },
      {
        "fileMatch": "package.json",
        "url": "./schemas/package-json.schema.json"
      }
    ],
    "configuration": {
      "title": "JS/TS Import/Export Sorter configuration",
      "properties": {
        "tsImportSorter.configuration.configurationFileName": {
          "type": "string",
          "default": "import-sorter.json",
          "description": "Configuration file name."
        },
        "tsImportSorter.configuration.autoFormat": {
          "type": "string",
          "enum": [
            "off",
            "onSave"
          ],
          "default": "onSave",
          "description": "When to auto format imports/exports.",
          "enumDescriptions": [
            "Never auto format imports/exports.",
            "Auto format imports/exports on save."
          ]
        },
        "tsImportSorter.configuration.formatExports": {
          "type": "boolean",
          "default": true,
          "description": "Whether to format exports as well."
        },
        "tsImportSorter.configuration.exclude": {
          "type": "array",
          "default": [
            "node_modules"
          ],
          "items": {
            "type": "string"
          },
          "description": "Disable formatting for files matching regular expressions."
        },
        "tsImportSorter.configuration.excludeGlob": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Disable formatting for files matching glob patterns."
        },
        "tsImportSorter.configuration.sortImportsBy": {
          "type": "string",
          "enum": [
            "paths",
            "names"
          ],
          "default": "paths",
          "description": "Sort import declarations by paths or first names."
        },
        "tsImportSorter.configuration.groupRules": {
          "type": "array",
          "default": [
            "^react(-dom)?$",
            "^@angular/",
            "^vue$",
            "^node:",
            {},
            "^[@]",
            "^[.]"
          ],
          "items": {
            "type": [
              "string",
              "array",
              "object"
            ]
          },
          "markdownDescription": "Grouping rules for path patterns for imports. See the [wiki](https://github.com/daidodo/format-imports/wiki/Grouping-Rules) for more details."
        },
        "tsImportSorter.configuration.sortRules": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "none"
              ]
            },
            {
              "type": "object",
              "properties": {
                "paths": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "none"
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "az",
                          "AZ",
                          "aA",
                          "Aa",
                          "_"
                        ]
                      }
                    }
                  ],
                  "default": [
                    "_",
                    "aA"
                  ],
                  "description": "Sorting rule for import paths."
                },
                "names": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "none"
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "az",
                          "AZ",
                          "aA",
                          "Aa",
                          "_"
                        ]
                      }
                    }
                  ],
                  "default": [
                    "_",
                    "aA"
                  ],
                  "description": "Sorting rule for imported/exported names."
                }
              }
            }
          ],
          "default": {
            "paths": [
              "_",
              "aA"
            ],
            "names": [
              "_",
              "aA"
            ]
          },
          "markdownDescription": "Sorting rule for paths and names. See the [wiki](https://github.com/daidodo/format-imports/wiki/Sorting-Rules) for more details."
        },
        "tsImportSorter.configuration.keepUnused": {
          "type": "array",
          "default": [],
          "items": {
            "type": [
              "string",
              "object"
            ]
          },
          "markdownDescription": "By default all unused imports are removed. Keep some or all them around with this setting if you need."
        },
        "tsImportSorter.configuration.emptyLinesBetweenGroups": {
          "type": "number",
          "default": 1,
          "description": "Number of empty lines between groups (NOT sub-groups)."
        },
        "tsImportSorter.configuration.emptyLinesAfterAllImports": {
          "type": "number",
          "default": 1,
          "description": "Number of empty lines after the last import declaration."
        },
        "tsImportSorter.configuration.removeLastSlashInPath": {
          "type": "boolean",
          "default": false,
          "description": "Whether to remove the last slash when normalizing paths."
        },
        "tsImportSorter.configuration.removeLastIndexInPath": {
          "type": "boolean",
          "default": false,
          "description": "Whether to remove the last 'index' when normalizing paths."
        },
        "tsImportSorter.configuration.wrappingStyle": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "prettier"
              ]
            },
            {
              "type": "object",
              "properties": {
                "maxBindingNamesPerLine": {
                  "type": "number",
                  "default": 1,
                  "description": "Max binding names per line before wrapping for imports. 0 for no limit."
                },
                "maxDefaultAndBindingNamesPerLine": {
                  "type": "number",
                  "default": 2,
                  "description": "Max default and binding names per line before wrapping for imports. 0 for no limit."
                },
                "maxExportNamesPerLine": {
                  "type": "number",
                  "default": 0,
                  "description": "Max binding names per line before wrapping for exports. 0 for no limit."
                },
                "maxNamesPerWrappedLine": {
                  "type": "number",
                  "default": 1,
                  "description": "Max names on wrapped lines for imports/exports. 0 for no limit."
                },
                "ignoreComments": {
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to ignore trailing comments when counting line length."
                }
              }
            }
          ],
          "default": {
            "maxBindingNamesPerLine": 1,
            "maxDefaultAndBindingNamesPerLine": 2,
            "maxExportNamesPerLine": 0,
            "maxNamesPerWrappedLine": 1,
            "ignoreComments": false
          },
          "markdownDescription": "Line wrapping styles. See the [wiki](https://github.com/daidodo/format-imports/wiki/Line-Wrapping-Style) for more details."
        },
        "tsImportSorter.configuration.development.enableDebug": {
          "type": "boolean",
          "default": false,
          "description": "Whether to enable debug mode and print detailed logs to the output channel."
        }
      }
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 100,
    "arrowParens": "avoid",
    "embeddedLanguageFormatting": "off"
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "tsconfigRootDir": "./",
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint",
      "eslint-plugin-tsdoc"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "prettier/@typescript-eslint"
    ],
    "ignorePatterns": [
      "src/test/suite/examples/**/*.ts",
      "webpack.config.*"
    ],
    "rules": {
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/restrict-template-expressions": "off",
      "@typescript-eslint/no-unsafe-assignment": "off",
      "@typescript-eslint/no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": false
        }
      ],
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "varsIgnorePattern": "^_",
          "argsIgnorePattern": "^_",
          "ignoreRestSiblings": true
        }
      ],
      "tsdoc/syntax": "warn"
    }
  },
  "dependencies": {
    "format-imports": "^2.4.7",
    "lodash.clonedeep": "^4.5.0",
    "log4js": "^6.4.1",
    "node-cache": "^5.1.2"
  },
  "devDependencies": {
    "@types/lodash.clonedeep": "^4.5.6",
    "@types/node": "^14.18.9",
    "@types/vscode": "^1.63.1",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "prettier": "^2.5.1",
    "typescript": "^4.5.5",
    "vscode-test": "^1.6.1"
  }
}
